/**
 * Generated by the Inrupt Artifact Generator [@inrupt/artifact-generator], version [3.1.1]
 * as part of artifact: [generated-vocab-common-TEST], version: [10.11.12]
 * on 'Monday, October 2, 2023 11:19 AM'.
 *
 * Vocabulary built from vocab list file: [./test/resources/packaging/vocab-list-dummy-commands.yml].
 * The generator detected the following terms in the source vocabulary:
 *  - Classes: [4]
 *  - Properties: [6]
 *  - Literals: [2]
 *  - Constant IRIs: [2]
 *  - Constant strings: [1]
 *
 * Vocabulary for terms used during Source Code Generation from RDF vocabularies.
 */

// We prefix our local variables with underscores to (hopefully!) prevent
// potential names clashes with terms from vocabularies.
const { VocabTerm: _VocabTerm, getLocalStore } = require("@inrupt/solid-common-vocab");
const _DataFactory = require("@rdfjs/data-model");

const { namedNode: _namedNode } = _DataFactory;

function _NS(localName) {
  return _namedNode(`https://ex.com/vocab/test/${localName}`);
}

/**
 * Vocabulary for terms used during Source Code Generation from RDF vocabularies.
 *
 * Namespace IRI: [https://ex.com/vocab/test/]
 */
const OVERRIDE_NAME = {
  PREFIX: "override-name",
  NAMESPACE: "https://ex.com/vocab/test/",
  PREFIX_AND_NAMESPACE: { "override-name": "https://ex.com/vocab/test/" },
  NS: _NS,

  // *****************
  // All the Classes.
  // *****************

  /**
   * This is a rdfs class.
   *
   * This term provides descriptions only with no explicit locale.
   */
  class1: new _VocabTerm(
    _NS("class1"),
    _DataFactory,
    getLocalStore(),
    false
  )
    .addType(_namedNode("http://www.w3.org/2000/01/rdf-schema#Class"))
    .addLabelNoLanguage(`A rdfs class`)
    .addCommentNoLanguage(`This is a rdfs class.`),

  /**
   * This is an owl class.
   *
   * This term provides descriptions only with no explicit locale.
   */
  class2: new _VocabTerm(
    _NS("class2"),
    _DataFactory,
    getLocalStore(),
    false
  )
    .addType(_namedNode("http://www.w3.org/2002/07/owl#Class"))
    .addLabelNoLanguage(`An owl class`)
    .addCommentNoLanguage(`This is an owl class.`),

  /**
   * This is a skos concept class.
   *
   * This term provides descriptions only with no explicit locale.
   */
  class3: new _VocabTerm(
    _NS("class3"),
    _DataFactory,
    getLocalStore(),
    false
  )
    .addType(_namedNode("http://www.w3.org/2004/02/skos/core#Concept"))
    .addLabelNoLanguage(`A skos concept class`)
    .addCommentNoLanguage(`This is a skos concept class.`),

  /**
   * This is a schema payment status type class.
   *
   * This term provides descriptions only with no explicit locale.
   */
  class4: new _VocabTerm(
    _NS("class4"),
    _DataFactory,
    getLocalStore(),
    false
  )
    .addType(_namedNode("https://schema.org/PaymentStatusType"))
    .addType(_namedNode("https://schema.org/NotSupportedClass"))
    .addLabelNoLanguage(`A schema payment status type class`)
    .addCommentNoLanguage(`This is a schema payment status type class.`),


  // *******************
  // All the Properties.
  // *******************

  /**
   * This is a rdf property.
   *
   * This term provides descriptions only with no explicit locale.
   */
  property1: new _VocabTerm(
    _NS("property1"),
    _DataFactory,
    getLocalStore(),
    false
  )
    .addType(_namedNode("http://www.w3.org/1999/02/22-rdf-syntax-ns#Property"))
    .addLabelNoLanguage(`A rdf property`)
    .addCommentNoLanguage(`This is a rdf property.`),

  /**
   * This is a data type property.
   *
   * This term provides descriptions only with no explicit locale.
   */
  property2: new _VocabTerm(
    _NS("property2"),
    _DataFactory,
    getLocalStore(),
    false
  )
    .addType(_namedNode("http://www.w3.org/2000/01/rdf-schema#Datatype"))
    .addLabelNoLanguage(`A rdfs data type property`)
    .addCommentNoLanguage(`This is a data type property.`),

  /**
   * This is an owl object property.
   *
   * This term provides descriptions only with no explicit locale.
   */
  property3: new _VocabTerm(
    _NS("property3"),
    _DataFactory,
    getLocalStore(),
    false
  )
    .addType(_namedNode("http://www.w3.org/2002/07/owl#ObjectProperty"))
    .addLabelNoLanguage(`An owl object property`)
    .addCommentNoLanguage(`This is an owl object property.`),

  /**
   * This is an owl named individual property.
   *
   * This term provides descriptions only with no explicit locale.
   */
  property4: new _VocabTerm(
    _NS("property4"),
    _DataFactory,
    getLocalStore(),
    false
  )
    .addType(_namedNode("http://www.w3.org/2002/07/owl#NamedIndividual"))
    .addLabelNoLanguage(`An owl named individual property`)
    .addCommentNoLanguage(`This is an owl named individual property.`),

  /**
   * This is an owl annotation property.
   *
   * This term provides descriptions only with no explicit locale.
   */
  property5: new _VocabTerm(
    _NS("property5"),
    _DataFactory,
    getLocalStore(),
    false
  )
    .addType(_namedNode("http://www.w3.org/2002/07/owl#AnnotationProperty"))
    .addLabelNoLanguage(`An owl annotation property`)
    .addCommentNoLanguage(`This is an owl annotation property.`),

  /**
   * This is an owl datatype property.
   *
   * This term provides descriptions only with no explicit locale.
   */
  property6: new _VocabTerm(
    _NS("property6"),
    _DataFactory,
    getLocalStore(),
    false
  )
    .addType(_namedNode("http://www.w3.org/2002/07/owl#DatatypeProperty"))
    .addLabelNoLanguage(`An owl datatype property`)
    .addCommentNoLanguage(`This is an owl datatype property.`),


  // *******************
  // All the Literals.
  // *******************

  /**
   * This is a rdfs literal.
   *
   * This term provides descriptions only with no explicit locale.
   */
  literal1: new _VocabTerm(
    _NS("literal1"),
    _DataFactory,
    getLocalStore(),
    false
  )
    .addType(_NS("http://www.w3.org/2000/01/rdf-schema#Literal"))
    .addLabelNoLanguage(`A rdfs literal`)
    .addCommentNoLanguage(`This is a rdfs literal.`),

  /**
   * Welcome
   *
   * This term has no descriptions at all (i.e., the vocabulary doesn't provide any 'rdfs:label', 'rdfs:comment', or 'dcterms:description', or 'skos:definition' metadata).
   */
  literal2: new _VocabTerm(
    _NS("literal2"),
    _DataFactory,
    getLocalStore(),
    false
  )
    .addType(_NS("http://www.w3.org/2000/01/rdf-schema#Literal"))
    .addMessage(`Welcome`, "en")
    .addMessage(`Bienvenido`, "es")
    .addMessage(`Bienvenue`, "fr"),


  // **************************
  // All the constant strings.
  // **************************

  /**
   * This is a string constant.
   *
   * The term has a description only in English, with [1] label in the language [en], but [2] comments in languages [en, en] (so the difference is only between English and NoLocale, which we consider the same).
   */
  constantString: "Value of our string constant",


  // ***********************
  // All the constant IRIs.
  // ***********************

  /**
   * This is constant IRI (using the DID scheme).
   *
   * The term has a description only in English, with [1] label in the language [en], but [2] comments in languages [NoLocale, en] (so the difference is only between English and NoLocale, which we consider the same).
   */
  constantIriDid: _namedNode("did:veres:some-value")
  ,

  /**
   * This is constant IRI value (using the HTTPS scheme).
   *
   * The term has a description only in English, with [1] label in the language [en], but [2] comments in languages [NoLocale, en] (so the difference is only between English and NoLocale, which we consider the same).
   */
  constantIriHttps: _namedNode("https://some-domain.com/maybe-for-a-test#webId")
  ,

}

module.exports = OVERRIDE_NAME;
