/**
 * Generated by the Inrupt Artifact Generator [@inrupt/artifact-generator], version [3.1.1]
 * as part of artifact: [generated-vocab-common-TEST], version: [3.2.1-SNAPSHOT]
 * on 'Monday, October 2, 2023 11:19 AM'.
 *
 * Vocabulary built from vocab list file: [./test/resources/packaging/vocab-list-dummy-commands.yml].
 * The generator detected the following terms in the source vocabulary:
 *  - Classes: [4]
 *  - Properties: [6]
 *  - Literals: [2]
 *  - Constant IRIs: [2]
 *  - Constant strings: [1]
 *
 * Vocabulary for terms used during Source Code Generation from RDF vocabularies.
 */
package com.inrupt.testing;

import org.eclipse.rdf4j.model.IRI;
import org.eclipse.rdf4j.model.Namespace;
import org.eclipse.rdf4j.model.impl.SimpleNamespace;
import org.eclipse.rdf4j.model.impl.SimpleValueFactory;

import org.solid.common.vocab.Vocab;
import org.solid.common.vocab.VocabTerm;
import com.inrupt.solid.common.vocab.VocabTermImpl;

/**
 * Vocabulary for terms used during Source Code Generation from RDF vocabularies.
 *
 * Namespace IRI: [https://ex.com/vocab/test/]
 */
public class OVERRIDE_NAME implements Vocab {
    public static final String PREFIX = "override-name";
    public static final String NAMESPACE = "https://ex.com/vocab/test/";

    public static final IRI NAMESPACE_IRI = SimpleValueFactory.getInstance().createIRI("https://ex.com/vocab/test/");
    public static final Namespace NS = new SimpleNamespace(PREFIX, NAMESPACE);

    @Override
    public final String getNamespacePrefix() {
        return PREFIX;
    }

    @Override
    public final IRI getNamespaceIri() {
        return NAMESPACE_IRI;
    }

    private static String FULL_IRI(final String localName) {
        return NAMESPACE + localName;
    }

    // *****************
    // All the Classes.
    // *****************

    /**
     * This is a rdfs class.
     *
     * This term provides descriptions only with no explicit locale.
     */
    public static final VocabTerm class1 = new VocabTermImpl(FULL_IRI("class1"), true)
        .addLabelNoLanguage("A rdfs class")
        .addCommentNoLanguage("This is a rdfs class.");

    /**
     * This is an owl class.
     *
     * This term provides descriptions only with no explicit locale.
     */
    public static final VocabTerm class2 = new VocabTermImpl(FULL_IRI("class2"), true)
        .addLabelNoLanguage("An owl class")
        .addCommentNoLanguage("This is an owl class.");

    /**
     * This is a skos concept class.
     *
     * This term provides descriptions only with no explicit locale.
     */
    public static final VocabTerm class3 = new VocabTermImpl(FULL_IRI("class3"), true)
        .addLabelNoLanguage("A skos concept class")
        .addCommentNoLanguage("This is a skos concept class.");

    /**
     * This is a schema payment status type class.
     *
     * This term provides descriptions only with no explicit locale.
     */
    public static final VocabTerm class4 = new VocabTermImpl(FULL_IRI("class4"), true)
        .addLabelNoLanguage("A schema payment status type class")
        .addCommentNoLanguage("This is a schema payment status type class.");


    // *******************
    // All the Properties.
    // *******************

    /**
     * This is a rdf property.
     *
     * This term provides descriptions only with no explicit locale.
     */
    public static final VocabTerm property1 = new VocabTermImpl(FULL_IRI("property1"), true)
        .addLabelNoLanguage("A rdf property")
        .addCommentNoLanguage("This is a rdf property.");

    /**
     * This is a data type property.
     *
     * This term provides descriptions only with no explicit locale.
     */
    public static final VocabTerm property2 = new VocabTermImpl(FULL_IRI("property2"), true)
        .addLabelNoLanguage("A rdfs data type property")
        .addCommentNoLanguage("This is a data type property.");

    /**
     * This is an owl object property.
     *
     * This term provides descriptions only with no explicit locale.
     */
    public static final VocabTerm property3 = new VocabTermImpl(FULL_IRI("property3"), true)
        .addLabelNoLanguage("An owl object property")
        .addCommentNoLanguage("This is an owl object property.");

    /**
     * This is an owl named individual property.
     *
     * This term provides descriptions only with no explicit locale.
     */
    public static final VocabTerm property4 = new VocabTermImpl(FULL_IRI("property4"), true)
        .addLabelNoLanguage("An owl named individual property")
        .addCommentNoLanguage("This is an owl named individual property.");

    /**
     * This is an owl annotation property.
     *
     * This term provides descriptions only with no explicit locale.
     */
    public static final VocabTerm property5 = new VocabTermImpl(FULL_IRI("property5"), true)
        .addLabelNoLanguage("An owl annotation property")
        .addCommentNoLanguage("This is an owl annotation property.");

    /**
     * This is an owl datatype property.
     *
     * This term provides descriptions only with no explicit locale.
     */
    public static final VocabTerm property6 = new VocabTermImpl(FULL_IRI("property6"), true)
        .addLabelNoLanguage("An owl datatype property")
        .addCommentNoLanguage("This is an owl datatype property.");


    // *******************
    // All the Literals.
    // *******************

    /**
     * This is a rdfs literal.
     *
     * This term provides descriptions only with no explicit locale.
     */
    public static final VocabTerm literal1 = new VocabTermImpl(FULL_IRI("literal1"), true)
        .addLabelNoLanguage("A rdfs literal")
        .addCommentNoLanguage("This is a rdfs literal.");

    /**
     * Welcome
     *
     * This term has no descriptions at all (i.e., the vocabulary doesn't provide any 'rdfs:label', 'rdfs:comment', or 'dcterms:description', or 'skos:definition' metadata).
     */
    public static final VocabTerm literal2 = new VocabTermImpl(FULL_IRI("literal2"), true)
        .addMessage("Welcome", "en")
        .addMessage("Bienvenido", "es")
        .addMessage("Bienvenue", "fr");


    // **************************
    // All the constant strings.
    // **************************

    /**
     * This is a string constant.
     *
     * The term has a description only in English, with [1] label in the language [en], but [2] comments in languages [en, en] (so the difference is only between English and NoLocale, which we consider the same).
     */
    public static final String constantString = "Value of our string constant";


    // ***********************
    // All the constant IRIs.
    // ***********************

    /**
     * This is constant IRI (using the DID scheme).
     *
     * The term has a description only in English, with [1] label in the language [en], but [2] comments in languages [NoLocale, en] (so the difference is only between English and NoLocale, which we consider the same).
     */
    public static final IRI constantIriDid = SimpleValueFactory.getInstance().createIRI("did:veres:some-value");

    /**
     * This is constant IRI value (using the HTTPS scheme).
     *
     * The term has a description only in English, with [1] label in the language [en], but [2] comments in languages [NoLocale, en] (so the difference is only between English and NoLocale, which we consider the same).
     */
    public static final IRI constantIriHttps = SimpleValueFactory.getInstance().createIRI("https://some-domain.com/maybe-for-a-test#webId");
 }
